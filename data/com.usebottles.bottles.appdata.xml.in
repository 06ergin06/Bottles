<?xml version="1.0" encoding="UTF-8"?>
<component type="desktop">
    <id>com.usebottles.bottles.desktop</id>
    <metadata_license>CC0-1.0</metadata_license>
    <project_license>GPL-3.0-or-later</project_license>
    <name>Bottles</name>
    <summary>Run Windows software</summary>
    <developer_name translatable="no">Mirko Brombin</developer_name>
    <description>
        <p>Run Windows software on Linux with Bottles!</p>
        <p>Bottle software and enjoy at your leisure!</p>
        <p>Our built-in dependency installation system grants automatic software
            compatibility access. Use the download manager to download the official components:
            the runner (Wine, Proton), DXVK, dependencies, etc.</p>
        <p>Bottle versioning keeps your work safe now and lets you restore it later!</p>
        <p>Features:</p>
        <ul>
          <li>Create bottles using preconfigured environments or create your own</li>
          <li>Run executables (.exe/.msi) in your bottles, directly from the context menu of your file-manager</li>
          <li>Automated detection of applications installed in your bottles</li>
          <li>Add environment variables quickly</li>
          <li>Override DLLs directly from per-bottle preferences</li>
          <li>On-the-fly runner change for any Bottle</li>
          <li>Various gaming-performance optimizations (esync, fsync, DXVK, cache, shader compiler, offload … and much more.)</li>
          <li>Automatic installation and management of Wine and Proton runners</li>
          <li>Automatic bottle repair in case of breakage</li>
          <li>Integrated dependency-installer based on a community-driven repository</li>
          <li>Integrated Task manager for Wine processes</li>
          <li>Access to ProtonDB and WineHQ for support</li>
          <li>System for bringing your configuration to new versions of Bottles</li>
          <li>Back up and import bottles</li>
          <li>Import Wine prefixes from other managers</li>
          <li>Bottles versioning (experimental)</li>
          <li>... and much more that you can find by installing Bottles!</li>
        </ul>
    </description>
    ​<mimetypes>
        <mimetype>application/x-ms-dos-executable</mimetype>
        <mimetype>application/x-msi</mimetype>
        <mimetype>application/x-ms-shortcut</mimetype>
        <mimetype>application/x-wine-extension-msp</mimetype>
    </mimetypes>
    <screenshots>
        <screenshot type="default">
            <image>https://raw.githubusercontent.com/bottlesdevs/Bottles/master/data/appstream/screenshot.png</image>
        </screenshot>
        <screenshot>
            <image>https://raw.githubusercontent.com/bottlesdevs/Bottles/master/data/appstream/1.png</image>
        </screenshot>
        <screenshot>
            <image>https://raw.githubusercontent.com/bottlesdevs/Bottles/master/data/appstream/2.png</image>
        </screenshot>
        <screenshot>
            <image>https://raw.githubusercontent.com/bottlesdevs/Bottles/master/data/appstream/3.png</image>
        </screenshot>
        <screenshot>
            <image>https://raw.githubusercontent.com/bottlesdevs/Bottles/master/data/appstream/4.png</image>
        </screenshot>
        <screenshot>
            <image>https://raw.githubusercontent.com/bottlesdevs/Bottles/master/data/appstream/5.png</image>
        </screenshot>
        <screenshot>
            <image>https://raw.githubusercontent.com/bottlesdevs/Bottles/master/data/appstream/6.png</image>
        </screenshot>
        <screenshot>
            <image>https://raw.githubusercontent.com/bottlesdevs/Bottles/master/data/appstream/7.png</image>
        </screenshot>
        <screenshot>
            <image>https://raw.githubusercontent.com/bottlesdevs/Bottles/master/data/appstream/8.png</image>
        </screenshot>
        <screenshot>
            <image>https://raw.githubusercontent.com/bottlesdevs/Bottles/master/data/appstream/9.png</image>
        </screenshot>
    </screenshots>
    <translation type="gettext">com.usebottles.bottles</translation>
    <content_rating type="oars-1.1"/>
    <url type="homepage">https://usebottles.com</url>
    <url type="bugtracker">https://github.com/bottlesdevs/Bottles/issues</url>
    <url type="help">https://docs.usebottles.com</url>
    <url type="donation">https://usebottles.com/funding</url>
    <url type="translate">https://hosted.weblate.org/engage/bottles</url>
    <recommends>
      <control>pointing</control>
      <control>keyboard</control>
      <control>touch</control>
    </recommends>
    <requires>
      <display_length compare="ge">768</display_length>
    </requires>
    <releases>
        <release version="2022.2.28-trento-1" date="2022-02-26">
          <description>
            <p>News</p>
            <ul>
                <li>Template caching creates a copy of the first bottle created with one environment, to use it as the basis of the next one, greatly reduces creation time. Templates are regenerated when a rule changes in the default configuration of an environment, while components are still updated if new ones are installed.</li>
                <li>Now it is possible to install multiple dependencies at once (really not recommended)</li>
                <li>The components screen has been reorganized into groups to make it easier to navigate</li>
                <li>Change DPI directly from the bottle preferences</li>
                <li>The Take focus option has added to preferences, allowing the user to resume focus on app change when these hold it</li>
                <li>Improved WinePrograms logs with the effective running action</li>
                <li>DXVK-async is now always at the bottom of the list, preventing it from being taken by Bottles as the most recent version on bottle creation</li>
                <li>Add a journal file which collect all the most important actions and events</li>
                <li>The userdir/ placeholder was added allowing maintainers to reach executables from the user bottle directory</li>
                <li>New bottles are now sandboxed by default, despite if running as flatpak or not (in other packages the link to the user home is simply removed)</li>
                <li>Manage your virtual drives directly from the bottle preferences</li>
                <li>Programs list in bottle details is now hidden if there are only hidden entries</li>
                <li>Flatpak users can now generate desktop entries too if the ~/.local/share/applications path is exposed</li>
                <li>General improvements to the WINE backend</li>
            </ul>

            <p>Fixes</p>
            <ul>
                <li>Fixed a problem with Windows version change, was trying to set duplicate keys on registry</li>
                <li>Fixed a race condition on DLL components remove and install tasks (Thanks to @asbytes)</li>
                <li>Fixed a bug in command execution, the WINEPREFIX env var was not rewritten if already present in the environment</li>
                <li>Fixed DLL components for 32 bit bottles (Thanks to @ffuugoo)</li>
                <li>Fixed a bug in Mouse Capture Fullscreen setting which was resetting on restart</li>
                <li>Fixed a bug in backup export, the backup was not aborting if the user have not picked a path</li>
                <li>Fixed a bug with generated desktop entries, was setting the wrong executable path</li>
                <li>Fixed a bug in layered executables support, which was unable to launch executables due to structure mismatch</li>
                <li>Fixed a bug with CabExtract implementation, which was extracting resources to the wrong directory if symlink</li>
                <li>Fixed a bug in layer sweep function, which was sweeping all files instead of the different ones</li>
                <li>Fixed a bug in layer mount function, which was mounting the wrong directory if reading from the configuration</li>
                <li>Fixed a bug in WINE command execution, which was defaulting to the bottle path instead of the layered one</li>
                <li>Fixed a bug in bottles initial check, which was causing a crash if the configuration file was not found</li>
                <li>Fixed programs ignored_patterns, which was allowing unins* files to be listed in programs view</li>
                <li>Fixed a bug with DLL components which was not ensuring the prefix was updated before registering DLL overrides</li>
                <li>Fixed winbind issue (Thanks to @arashsm79)</li>
                <li>Fixed a bug with hidden programs, which were not excluded from is_alive check</li>
            </ul>

            <p>Translations</p>
            <ul>
                <li>Czech translations thanks to @panmourovaty, @uzu128, @tuzu128</li>
                <li>French translations thanks to @julroy67</li>
                <li>Italian translations thanks to @albanobattistella, @phaerrax</li>
                <li>Indonesian translations thanks to @frnmz</li>
                <li>Russian translations thanks to @Knebergish, @Smoque</li>
                <li>Finnish translations thanks to Jiri Grönroos</li>
                <li>Croatian translations thanks to @milotype</li>
                <li>Slovak translations thanks to @prescott66</li>
                <li>Romanian translations thanks to @tiberiufrat</li>
                <li>Portuguese translations thanks to @Xico26</li>
                <li>Hungarian translations thanks to @swanux</li>
                <li>Polish translations thanks to @imLinguin</li>
                <li>German translations thanks to @thericosanto</li>
            </ul>
          </description>
        </release>
    </releases>
</component>
